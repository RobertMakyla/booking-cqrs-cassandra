akka.actor.allow-java-serialization = on

akka.projection.cassandra {

  session-config-path = "akka.projection.cassandra.session-config"

  session-config {
    # The implementation of `akka.stream.alpakka.cassandra.CqlSessionProvider`
    # used for creating the `CqlSession`.
    # It may optionally have a constructor with an `ClassicActorSystemProvider` and `Config` parameters.
    session-provider = "akka.stream.alpakka.cassandra.DefaultSessionProvider"

    # Configure Akka Discovery by setting a service name
    service-discovery {
      name = ""
      lookup-timeout = 1 s
    }

    # The ExecutionContext to use for the session tasks and future composition.
    session-dispatcher = "akka.actor.default-dispatcher"

    # Full config path to the Datastax Java driver's configuration section.
    # When connecting to more than one Cassandra cluster different session configuration can be
    # defined with this property.
    # and https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/
    datastax-java-driver-config = "datastax-java-driver"
  }

  offset-store {
    keyspace = "akka_projection"
    # the database table name for the offset store
    table = "offset_store"
    # the database table name for the projection manangement data
    management-table = "projection_management"
  }
}

datastax-java-driver {

  # always set this to allow reconnection on startup if cassandra is down
  # not overridiable profile so this plugin can't override it for you
  //  # advanced.reconnect-on-init = true

  // connection settings to Astra DB
  // enable/disable these configs to connect to either Astra DB or a local Cassandra (via a Docker container)
  //  basic.cloud {
  //    secure-connect-bundle = "src/main/resources/secure-connect-rock-the-jvm-cqrs-demo.zip"
  //  }
  //
  //  advanced.auth-provider {
  //    class = "PlainTextAuthProvider"
  //    username = "XkdGKkTilPLPxUUyMshQpJeu"
  //    password = "IwQngBATdqvfwOh-k+IALz,Z2p3Cn-Zyhp.2o-2P_aNiQBLkcs3M8vDdELTTujgHX4ugnbvZXc9nyTRSdZA34MmLji9+F9iRlIYRAOZbw5yoTyZRRa.ZvzcCOCImPMu1"
  //  }
}


akka {
  loglevel = INFO

  persistence.journal {
    plugin = "akka.persistence.cassandra.journal"
    auto-start-journals = ["akka.persistence.cassandra.journal"]
  }
  persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

  persistence {
    cassandra {
      datastax-java-driver-config = "datastax-java-driver"

      journal {
        # to create the schema
        keyspace-autocreate = true
        tables-autocreate = true
      }

      snapshot {
        # to create the schema
        keyspace-autocreate = true
        tables-autocreate = true
      }

      query {
        refresh-interval = 2s
      }

      events-by-tag {
        # for lower latency
        eventual-consistency-delay = 25ms
        flush-interval = 25ms
        pubsub-notification = on
      }
    }
  }
}
